{"version":3,"sources":["contexts/AppContext.tsx","style/theme/theme.ts","style/global/global.ts","hooks/useData.tsx","components/atoms/BalanceLabel/BalanceLabel.tsx","components/molecules/SidebarBalance/SidebarBalance.tsx","components/molecules/SidebarNavItem/SidebarNavItem.tsx","components/organisms/NavigationList/NavigationList.tsx","views/template/Sidebar.tsx","components/atoms/UserImg/UserImg.tsx","components/atoms/UserDetails/UserDetails.tsx","components/molecules/SummaryUserInfo/SummaryUserInfo.tsx","components/atoms/SummaryLabel/SummaryLabel.tsx","components/atoms/SummaryAmount/SummaryAmount.tsx","components/molecules/SummaryItem/SummaryItem.tsx","components/organisms/SummaryList/SummaryList.tsx","views/template/Summary.tsx","components/atoms/Hamburger/Hamburger.tsx","views/layout/Layout.tsx","services/axios.js","constants/urls.ts","views/pages/Homepage.tsx","assets/images/error.png","components/atoms/ErrorImg/ErrorImg.tsx","components/atoms/ErrorInfo/ErrorInfo.tsx","components/atoms/ErrorBtn/ErrorBtn.tsx","components/molecules/ErrorMessage/ErrorMessage.tsx","hoc/ErrorBoundary.tsx","App.tsx","index.tsx","contexts/UserContext.tsx","utils/convertCurrency.ts","contexts/LoaderContext.tsx","contexts/DataContext.tsx","components/atoms/Backdrop/Backdrop.tsx","assets/images/loader.gif","components/atoms/Loader/Loader.tsx","utils/formatNumber.ts","utils/capitalize.ts","contexts/StatsContext.tsx","components/atoms/FallbackIcon/FallbackIcon.tsx","containers/enums/CurrenciesSymbol.ts","utils/getCurrencySymbol.ts","hooks/useStats.tsx","constants/globalConst.ts","utils/slugify.ts","utils/narrowTransactionType.ts","components/organisms/GeneralLoader/GeneralLoader.tsx"],"names":["initialAppContext","summaryItemId","showSidebar","currency","currencyRates","AppContext","React","createContext","AppDispatchContext","AppContextProvider","children","useState","app","setApp","Provider","value","theme","createMuiTheme","palette","primary","main","secondary","text","grey","A100","A200","typography","fontFamily","h3","fontSize","h4","h6","subtitle1","bodyStyles","css","htmlStyles","generalStyles","GlobalStyle","createGlobalStyle","useData","dataList","setDataList","setIsLoading","useContext","LoaderDispatchContext","getState","useCallback","isActive","limitedResults","datamock","Array","i","useEffect","useStyles","makeStyles","labelStyle","marginBottom","BalanceLabel","balance","classes","content","getCurrencySymbol","formatNumber","Typography","className","variant","color","SWrapper","styled","div","SidebarBalance","align","Box","fontWeight","DashboardIcon","lazy","TransactionsIcon","UserIcon","ChartsIcon","CategoriesIcon","SidebarNavItem","label","icon","getItemIcon","fallback","FallbackIcon","location","capitalize","SUl","ul","SLi","li","SLink","Link","NavigationList","navList","map","el","curr","to","slugify","Sidebar","closed","UserContext","currentBalanceCurrency","parseFloat","currentBalance","attachedClasses","Backdrop","open","clicked","convertCurrency","useStyle","imgStyle","height","width","UserImg","imgSrc","Avatar","alt","src","boxStyle","marginTop","userEmailStyle","UserDetails","userName","userEmail","component","SummaryItem","box","margin","description","date","SummaryLabel","company","isCancelled","getLabel","onClick","e","target","closest","getAmountSign","type","currencyStyle","amountStyle","props","getAmountColor","SummaryAmount","amount","CancelledIcon","ExpenseIcon","IncomeIcon","PaypalIcon","SLeftWrapper","isPaypal","id","isChosen","setIsChosen","newApp","SummaryList","summaryList","DataContext","slice","narrowTransactionType","transactionType","paypal","Summary","avatar","firstName","lastName","email","SummaryUserInfo","SLine","Hamburger","url","queryParams","SMain","Layout","setShowSidebar","axiosCurrency","base","axios","create","baseURL","params","TransactionsList","Dashboard","SingleTransaction","CategoriesList","Charts","UserProfile","Homepage","currRates","setCurrRates","setUser","UserDispatchContext","setData","DataDispatchContext","setStats","StatsDispatchContext","isLoading","LoaderContext","stats","useStats","user","usermock","a","get","then","res","data","newRates","rates","catch","err","console","log","first_name","last_name","current_balance","current_balance_currency","creditCard","expYear","credit_card","exp_year","expMonth","exp_month","last4Digits","GeneralLoader","Loader","path","exact","length","SImg","img","ErrorImg","errorMsgStyle","position","zIndex","titleStyle","ErrorInfo","errorMsg","btnStyle","backgroundColor","common","white","padding","ErrorBtn","Button","ErrorMessage","onBtnClick","ErrorBoundary","BtnClickHandler","setState","hasError","error","history","replace","state","errorInfo","this","toString","Component","withRouter","App","StatsContext","ReactDOM","render","ThemeProvider","document","getElementById","initialUserContext","UserContextProvider","fromCurr","toCurr","total","Number","isNaN","LoaderContextProvider","DataContextProvider","backdropStyle","number","toFixed","str","splitStr","split","charAt","toUpperCase","substring","join","initialStatsContext","Map","expenses","incomes","cancelled","StatsContextProvider","summaryStyle","borderRadius","fill","sidebarStyle","marginRight","dashboardStyle","Symbol","require","firstDate","moment","lastDate","toDate","subtract","currData","setCurrData","newCurrData","currDate","isAfter","isBefore","currMonth","format","currYear","dateStr","undefined","set","someType"],"mappings":"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","file":"static/js/main.8e6193f3.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport type AppProps = {\n  summaryItemId: string;\n  showSidebar: boolean;\n  currency: string;\n  currencyRates: { [key: string]: number };\n};\n\nconst initialAppContext = {\n  summaryItemId: '',\n  showSidebar: false,\n  currency: 'EUR',\n  currencyRates: {},\n};\n\nexport const AppContext = React.createContext<AppProps>(initialAppContext);\nexport const AppDispatchContext = React.createContext<Function>(() => {});\n\nconst AppContextProvider: React.FC = ({ children }) => {\n  const [app, setApp] = useState<AppProps>(initialAppContext);\n\n  return (\n    <AppContext.Provider value={{ ...app }}>\n      <AppDispatchContext.Provider value={setApp}>{children}</AppDispatchContext.Provider>\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContextProvider;\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport '../../index.css';\n\nconst font = \"'Ubuntu', sans-serif\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#3a2d96',\n    },\n    secondary: {\n      main: '#ff7b7d',\n    },\n    text: {\n      primary: '#fff',\n      secondary: '#000',\n    },\n    grey: {\n      A100: '#988d8b',\n      A200: '#3f3f46',\n    },\n  },\n  typography: {\n    fontFamily: font,\n    h3: {\n      fontSize: '2.2rem',\n      '@media only screen and (max-width: 75em)': {\n        fontSize: '2rem',\n      },\n      '@media only screen and (max-width: 56.25em)': {\n        fontSize: '1.8rem',\n      },\n      '@media only screen and (max-width: 22em)': {\n        fontSize: '1.5rem',\n      },\n    },\n    h4: { fontSize: '2rem' },\n    h6: {\n      '@media only screen and (max-width: 22em)': {\n        fontSize: '1rem',\n      },\n    },\n    subtitle1: {\n      '@media only screen and (max-width: 22em)': {\n        fontSize: '0.8rem',\n      },\n    },\n  },\n});\n\nexport default theme;\n","import { createGlobalStyle, css } from 'styled-components';\n\n// /* $bp-xxxl: 110em; //1750px\n// $bp-xxl: 94em; //1500px\n// $bp-xl: 75em; //1200px\n// $bp-large: 68.75em; //1100px\n// $bp-medium: 56.25em; //900px\n// $bp-small:  37.5em; //600px\n// $bp-smallest: 31.25em; //500px*/\n\nexport const bodyStyles = css`\n  background-color: #edecf2;\n`;\n\nexport const htmlStyles = css`\n  box-sizing: border-box;\n\n  font-size: 100%; /*1rem==16px / 16px/16px=100%*/\n\n  @media only screen and (max-width: 94em) {\n    font-size: 87.5%; /*1rem==14px / 14px/16px=87.5%*/\n  }\n\n  @media only screen and (max-width: 37.5em) {\n    font-size: 75%; /*1rem==12px / 12px/16px=75%*/\n  }\n`;\n\nexport const generalStyles = css`\n  margin: 0;\n  padding: 0;\n  box-sizing: inherit;\n\n  --color-primary: #3a2d96;\n  --color-primary-light: #473a9d;\n\n  --color-secondary: #ff7b7d;\n\n  --color-tertiary: #fcead3;\n  --color-tertiary-light: #fdf1e4;\n\n  --color-forthtiary: #199fe6;\n\n  --color-grey-dark: #3f3f46;\n  --color-grey-light: #988d8b;\n\n  --color-black: #000000;\n  --color-white: #ffffff;\n  --color-white-dark: #faf9fe;\n\n  --shadow-dark: 0 2rem 6rem rgba(0, 0, 0, 0.3);\n  --shadow-light: 0 2rem 5rem rgba(0, 0, 0, 0.06);\n`;\n\nconst GlobalStyle = createGlobalStyle`\n    *,\n    *::before,\n    *::after{\n        ${generalStyles}\n    }    \n\n    html{\n        ${htmlStyles}\n    }\n\n    body {\n        ${bodyStyles}\n    }\n`;\n\nexport default GlobalStyle;\n","import { useState, useCallback, useEffect, useContext } from 'react';\nimport { DataListProps } from '../contexts/DataContext';\nimport { LoaderDispatchContext } from '../contexts/LoaderContext';\n\nimport datamock from '../mock/data-mock.json';\n\nconst useData = () => {\n  const [dataList, setDataList] = useState<DataListProps>([]);\n  const setIsLoading = useContext(LoaderDispatchContext);\n\n  const getState = useCallback(\n    (isActive: boolean) => {\n      const limitedResults: DataListProps = [];\n      const limit = 40;\n      if (datamock instanceof Array) {\n        for (let i = 0; i < limit; i += 1) {\n          limitedResults[i] = { ...datamock[i] };\n        }\n        if (isActive) {\n          setDataList(limitedResults);\n          setIsLoading(false);\n        }\n      }\n    },\n    [datamock]\n  );\n\n  useEffect(() => {\n    let isActive = true;\n    setIsLoading(true);\n\n    getState(isActive);\n\n    return () => {\n      isActive = false;\n    };\n  }, [getState]);\n\n  return dataList;\n};\n\nexport default useData;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport formatNumber from '../../../utils/formatNumber';\nimport getCurrencySymbol from '../../../utils/getCurrencySymbol';\n\ntype BalanceLabelProps = TypographyProps & {\n  balance: number;\n  currency: string;\n};\n\nconst useStyles = makeStyles({\n  labelStyle: {\n    marginBottom: '1rem',\n  },\n});\n\nconst BalanceLabel: React.FC<BalanceLabelProps> = ({ balance, currency }) => {\n  const classes = useStyles();\n  const content = `${getCurrencySymbol(currency)}${formatNumber(balance)}`;\n\n  return (\n    <Typography className={classes.labelStyle} variant=\"h4\" color=\"textPrimary\">\n      {content}\n    </Typography>\n  );\n};\n\nexport default BalanceLabel;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport BalanceLabel from '../../atoms/BalanceLabel/BalanceLabel';\n\nexport type SidebarBalanceProps = TypographyProps &\n  BoxProps & {\n    balance: number;\n    currency: string;\n  };\n\nconst SWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  background-color: var(--color-primary-light);\n  border-radius: 1rem;\n  padding: 1.5rem 1rem;\n  margin-bottom: 2rem;\n  letter-spacing: 2px;\n\n  width: 74%\n  height: 15.5%;\n`;\n\nconst SidebarBalance: React.FC<SidebarBalanceProps> = ({ balance, currency }) => (\n  <SWrapper>\n    <BalanceLabel balance={balance} currency={currency} />\n    <Typography variant=\"h6\" align=\"center\" color=\"textPrimary\">\n      <Box fontWeight=\"fontWeightLight\">Current balance</Box>\n    </Typography>\n  </SWrapper>\n);\n\nexport default SidebarBalance;\n","import React, { Suspense } from 'react';\nimport styled from 'styled-components';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport FallbackIcon from '../../atoms/FallbackIcon/FallbackIcon';\nimport capitalize from '../../../utils/capitalize';\n\nconst DashboardIcon = React.lazy(() => import('../../atoms/DashboardIcon/DashboardIcon'));\nconst TransactionsIcon = React.lazy(() => import('../../atoms/TransactionsIcon/TransactionsIcon'));\nconst UserIcon = React.lazy(() => import('../../atoms/UserIcon/UserIcon'));\nconst ChartsIcon = React.lazy(() => import('../../atoms/ChartsIcon/ChartsIcon'));\nconst CategoriesIcon = React.lazy(() => import('../../atoms/CategoriesIcon/CategoriesIcon'));\n\nexport type SidebarNavItemProps = TypographyProps &\n  BoxProps & {\n    label: 'dashboard' | 'transactions' | 'user profile' | 'charts' | 'categories';\n  };\n\nconst SWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  opacity: 0.6;\n  transition: all 0.2s;\n  letter-spacing: 2px;\n\n  &:hover {\n    opacity: 1;\n    transform: scale(1.2);\n  }\n`;\n\nconst getItemIcon = (label: string) => {\n  switch (label) {\n    case 'transactions':\n      return <TransactionsIcon />;\n    case 'user profile':\n      return <UserIcon />;\n    case 'charts':\n      return <ChartsIcon />;\n    case 'categories':\n      return <CategoriesIcon />;\n    default:\n      return <DashboardIcon />;\n  }\n};\n\nconst SidebarNavItem: React.FC<SidebarNavItemProps> = ({ label }) => {\n  const icon = getItemIcon(label);\n\n  return (\n    <SWrapper>\n      <Suspense fallback={<FallbackIcon location=\"sidebar\" />}>{icon}</Suspense>\n      <Typography color=\"textPrimary\" variant=\"h6\">\n        <Box fontWeight=\"fontWeightLight\">{capitalize(label)}</Box>\n      </Typography>\n    </SWrapper>\n  );\n};\n\nexport default SidebarNavItem;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport SidebarNavItem, { SidebarNavItemProps } from '../../molecules/SidebarNavItem/SidebarNavItem';\nimport slugify from '../../../utils/slugify';\n\nexport type NavigationListProps = {\n  navList: SidebarNavItemProps[];\n};\n\nconst SUl = styled.ul`\n  align-self: flex-start;\n  margin-left: 2.5rem;\n  margin-top: 2rem;\n\n  list-style: none;\n`;\n\nconst SLi = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 1.6rem;\n  }\n`;\n\nconst SLink = styled(Link)`\n  text-decoration: none;\n\n  &:hover,\n  &:active {\n    cursor: pointer;\n  }\n`;\n\nconst NavigationList: React.FC<NavigationListProps> = ({ navList }) => {\n  const renderNavItem = (curr: SidebarNavItemProps) => (\n    <SLi key={curr.label}>\n      <SLink to={`/${slugify(curr.label)}`}>\n        <SidebarNavItem label={curr.label} />\n      </SLink>\n    </SLi>\n  );\n\n  return <SUl>{navList.map((el) => renderNavItem(el))}</SUl>;\n};\n\nexport default NavigationList;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { UserContext } from '../../contexts/UserContext';\nimport SidebarBalance from '../../components/molecules/SidebarBalance/SidebarBalance';\nimport NavigationList from '../../components/organisms/NavigationList/NavigationList';\nimport Backdrop from '../../components/atoms/Backdrop/Backdrop';\nimport { AppContext } from '../../contexts/AppContext';\nimport convertCurrency from '../../utils/convertCurrency';\n\ntype SidebarProps = {\n  closed: Function;\n};\n\nconst SWrapper = styled.div`\n  background-color: var(--color-primary);\n  border-radius: 2rem 0 0 2rem;\n  padding-top: 3.2rem;\n  padding-right: 2rem;\n  height: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media only screen and (max-width: 56.25em) {\n    position: fixed;\n    top: 0;\n    left: 0;\n    transition: all 0.3s ease-out;\n    padding-right: 1.5rem;\n    padding-left: 1.5rem;\n    width: 23rem;\n    max-width: 70%;\n    z-index: 300;\n    border-radius: 0rem;\n\n    &.open {\n      transform: translateX(0);\n    }\n\n    &.close {\n      transform: translateX(-100%);\n    }\n  }\n\n  @media (min-width: 56.25em) and (max-width: 56.25em) {\n    &.sidebar {\n      display: none;\n    }\n  }\n`;\n\nconst Sidebar: React.FC<SidebarProps> = ({ closed }) => {\n  const app = useContext(AppContext);\n  const currency = useContext(UserContext).currentBalanceCurrency;\n  const balance = parseFloat(useContext(UserContext).currentBalance);\n\n  const attachedClasses = `sidebar ${app.showSidebar ? 'open' : 'close'}`;\n\n  return (\n    <>\n      <Backdrop open={app.showSidebar} clicked={closed} />\n      <SWrapper className={attachedClasses}>\n        <SidebarBalance\n          balance={convertCurrency(balance, currency, app.currency, app.currencyRates)}\n          currency={app.currency}\n        />\n        <NavigationList\n          navList={[\n            { label: 'dashboard' },\n            { label: 'transactions' },\n            { label: 'categories' },\n            { label: 'charts' },\n            { label: 'user profile' },\n          ]}\n        />\n      </SWrapper>\n    </>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport Avatar, { AvatarProps } from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core';\n\nexport type UserImgProps = AvatarProps & {\n  imgSrc: string;\n};\n\nconst useStyle = makeStyles({\n  imgStyle: {\n    height: '5rem',\n    width: '5rem',\n  },\n});\n\nconst UserImg: React.FC<UserImgProps> = ({ imgSrc }) => {\n  const classes = useStyle();\n\n  return <Avatar className={classes.imgStyle} alt=\"User Image\" src={imgSrc} />;\n};\n\nexport default UserImg;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport Box, { BoxProps } from '@material-ui/core/Box';\n\nexport type UserDetailsProps = BoxProps &\n  TypographyProps & {\n    userName: string;\n    userEmail: string;\n  };\n\nconst useStyles = makeStyles((theme) => ({\n  boxStyle: {\n    marginTop: '1rem',\n  },\n  userEmailStyle: {\n    color: theme.palette.grey.A100,\n  },\n}));\n\nconst UserDetails: React.FC<UserDetailsProps> = ({ userName, userEmail }) => {\n  const classes = useStyles();\n\n  return (\n    <Box component=\"div\" className={classes.boxStyle}>\n      <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\">\n        {userName}\n      </Typography>\n      <Typography className={classes.userEmailStyle} variant=\"subtitle1\" align=\"center\">\n        {userEmail}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default UserDetails;\n","import React from 'react';\nimport styled from 'styled-components';\nimport UserImg, { UserImgProps } from '../../atoms/UserImg/UserImg';\nimport UserDetails, { UserDetailsProps } from '../../atoms/UserDetails/UserDetails';\n\nexport type SummaryUserInfoProps = UserImgProps & UserDetailsProps;\n\nconst SWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  background-color: var(--color-tertiary-light);\n  padding: 2.5rem;\n  margin-bottom: 2rem;\n  border-radius: 1rem;\n`;\n\nconst SummaryItem: React.FC<SummaryUserInfoProps> = ({ imgSrc, userName, userEmail }) => (\n  <SWrapper>\n    <UserImg imgSrc={imgSrc} />\n    <UserDetails userName={userName} userEmail={userEmail} />\n  </SWrapper>\n);\nexport default SummaryItem;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport Box, { BoxProps } from '@material-ui/core/Box';\n\ntype SummaryLabelProps = BoxProps &\n  TypographyProps & {\n    isCancelled?: boolean;\n    company?: string;\n    date: string;\n    clicked: Function;\n  };\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    margin: '0.7rem',\n  },\n  description: {\n    color: theme.palette.grey.A200,\n  },\n  date: {\n    color: theme.palette.grey.A100,\n  },\n}));\n\nconst getLabel = (company?: string, isCancelled?: boolean) => {\n  if (isCancelled) return 'Cancelled';\n  if (company === 'Paypal') return 'Deposit PayPal';\n  return company ? `Deposit from ${company}` : '';\n};\n\nconst SummaryLabel: React.FC<SummaryLabelProps> = ({ company, isCancelled, date, clicked }) => {\n  const classes = useStyles();\n  const content = getLabel(company, isCancelled);\n\n  return (\n    <Box\n      className={classes.box}\n      component=\"div\"\n      onClick={(e) => clicked((e.target as HTMLElement).closest('.summaryItem'))}\n    >\n      <Typography className={classes.description} variant=\"subtitle1\">\n        {content}\n      </Typography>\n      <Typography className={classes.date} variant=\"body2\">\n        {date}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default SummaryLabel;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport formatNumber from '../../../utils/formatNumber';\n\ntype SummaryAmountProps = BoxProps &\n  TypographyProps & {\n    amount: number;\n    currency: string;\n    type: 'expense' | 'Income' | 'cancelled';\n  };\n\nconst getAmountColor = (type: string) => {\n  switch (type) {\n    case 'Income':\n      return 'var(--color-primary)';\n    case 'expense':\n      return 'var(--color-forthtiary)';\n    default:\n      return 'var(--color-black)';\n  }\n};\n\nconst getAmountSign = (type: string) => {\n  switch (type) {\n    case 'expense':\n      return '-';\n    case 'Income':\n      return '+';\n    default:\n      return '';\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  currencyStyle: {\n    color: theme.palette.grey.A100,\n  },\n  amountStyle: {\n    color: (props: SummaryAmountProps) => getAmountColor(props.type),\n  },\n}));\n\nconst SummaryAmount: React.FC<SummaryAmountProps> = ({ amount, currency, type }: SummaryAmountProps) => {\n  const props = {\n    amount,\n    currency,\n    type,\n  };\n  const { currencyStyle, amountStyle } = useStyles(props);\n\n  return (\n    <Box component=\"div\">\n      <Typography className={amountStyle} variant=\"subtitle1\" align=\"right\">\n        {getAmountSign(type)}\n        {formatNumber(amount)}\n      </Typography>\n      <Typography className={currencyStyle} variant=\"subtitle1\" align=\"right\">\n        {currency}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default SummaryAmount;\n","import React, { Suspense, useContext, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { AppContext, AppDispatchContext } from '../../../contexts/AppContext';\nimport SummaryLabel from '../../atoms/SummaryLabel/SummaryLabel';\nimport SummaryAmount from '../../atoms/SummaryAmount/SummaryAmount';\nimport FallbackIcon from '../../atoms/FallbackIcon/FallbackIcon';\nimport capitalize from '../../../utils/capitalize';\nimport convertCurrency from '../../../utils/convertCurrency';\n\nconst CancelledIcon = React.lazy(() => import('../../atoms/CancelledIcon/CancelledIcon'));\nconst ExpenseIcon = React.lazy(() => import('../../atoms/ExpenseIcon/ExpenseIcon'));\nconst IncomeIcon = React.lazy(() => import('../../atoms/IncomeIcon/IncomeIcon'));\nconst PaypalIcon = React.lazy(() => import('../../atoms/PaypalIcon/PaypalIcon'));\n\nexport type SummaryItemProps = {\n  company: string;\n  date: string;\n  amount: number;\n  currency: string;\n  type: 'expense' | 'Income' | 'cancelled';\n  isPaypal?: boolean;\n  id: string;\n};\n\nconst SWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  height: 3rem;\n`;\n\nconst SLeftWrapper = styled.div`\n  display: flex;\n  flex-direction: cloumn;\n  align-items: center;\n`;\n\nconst getItemIcon = (type: 'expense' | 'Income' | 'cancelled', isPaypal?: boolean) => {\n  switch (type) {\n    case 'expense':\n      return isPaypal ? <PaypalIcon /> : <ExpenseIcon location=\"summary\" />;\n    case 'Income':\n      return isPaypal ? <PaypalIcon /> : <IncomeIcon />;\n    default:\n      return <CancelledIcon />;\n  }\n};\n\nconst SummaryItem: React.FC<SummaryItemProps> = ({ company, date, amount, currency, type, isPaypal, id }) => {\n  const [isChosen, setIsChosen] = useState<boolean>(false);\n  const app = useContext(AppContext);\n  const setApp = useContext(AppDispatchContext);\n\n  const itemClickHandler = () => {\n    setIsChosen(true);\n  };\n\n  useEffect(() => {\n    if (isChosen) {\n      const newApp = { ...app };\n      newApp.summaryItemId = id;\n      setApp(newApp);\n    }\n  }, [isChosen]);\n\n  const icon = getItemIcon(type, isPaypal);\n\n  return (\n    <SWrapper className=\"summaryItem\">\n      <SLeftWrapper>\n        <Suspense fallback={<FallbackIcon location=\"summary\" />}>{icon}</Suspense>\n        <SummaryLabel\n          isCancelled={type === 'cancelled'}\n          company={capitalize(company)}\n          date={date}\n          clicked={itemClickHandler}\n        />\n      </SLeftWrapper>\n      <SummaryAmount\n        amount={convertCurrency(amount, currency, app.currency, app.currencyRates)}\n        currency={app.currency}\n        type={type}\n      />\n    </SWrapper>\n  );\n};\n\nexport default SummaryItem;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport SummaryItem from '../../molecules/SummaryItem/SummaryItem';\nimport { DataListProps, DataItemProps, DataContext } from '../../../contexts/DataContext';\nimport narrowTransactionType from '../../../utils/narrowTransactionType';\n\nexport type SummaryListProps = TypographyProps;\n\nconst SWrapper = styled.div`\n  height: 59%;\n`;\n\nconst SUl = styled.ul`\n  margin-top: 1.5rem;\n  overflow-y: hidden;\n\n  list-style: none;\n\n  &:hover,\n  &:focus,\n  &:active {\n    overflow-y: scroll;\n  }\n`;\n\nconst SLi = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 2rem;\n  }\n`;\n\nconst SLink = styled(Link)`\n  text-decoration: none;\n\n  &:hover,\n  &:active {\n    cursor: pointer;\n  }\n`;\n\nconst SummaryList: React.FC<SummaryListProps> = () => {\n  const summaryList: DataListProps = useContext(DataContext).slice(0, 10);\n\n  const renderSummaryItem = (curr: DataItemProps) => (\n    <SLi key={curr.id}>\n      <SLink to={`/transactions/${curr.id}`}>\n        <SummaryItem\n          id={curr.id}\n          company={curr.company}\n          date={curr.date}\n          amount={parseFloat(curr.amount)}\n          currency={curr.currency}\n          type={narrowTransactionType(curr.transactionType)}\n          isPaypal={curr.paypal}\n        />\n      </SLink>\n    </SLi>\n  );\n\n  return (\n    <SWrapper>\n      <Typography variant=\"h5\" color=\"textSecondary\">\n        Payment summary\n      </Typography>\n      <SUl>{summaryList.map((el) => renderSummaryItem(el))}</SUl>\n    </SWrapper>\n  );\n};\n\nexport default SummaryList;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { UserContext } from '../../contexts/UserContext';\nimport SummaryUserInfo from '../../components/molecules/SummaryUserInfo/SummaryUserInfo';\nimport SummaryList from '../../components/organisms/SummaryList/SummaryList';\n\nconst SWrapper = styled.div`\n  background-color: var(--color-tertiary);\n  border-radius: 0 2rem 2rem 0;\n  padding-top: 3.2rem;\n  padding-right: 1.5rem;\n  padding-left: 1.5rem;\n  padding-bottom: 3.2rem;\n  height: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n\n  @media only screen and (max-width: 75em) {\n    display: none;\n  }\n`;\n\nconst Summary: React.FC = () => {\n  const imgSrc = useContext(UserContext).avatar;\n  const userName = `${useContext(UserContext).firstName} ${useContext(UserContext).lastName}`;\n  const userEmail = useContext(UserContext).email;\n\n  return (\n    <SWrapper>\n      <SummaryUserInfo imgSrc={imgSrc} userName={userName} userEmail={userEmail} />\n      <SummaryList />\n    </SWrapper>\n  );\n};\n\nexport default Summary;\n","import React from 'react';\nimport styled from 'styled-components';\n\ntype HamburgerProps = {\n  clicked: Function;\n};\n\nconst SWrapper = styled.div`\n  @media only screen and (min-width: 56.25em) {\n    display: none;\n  }\n`;\n\nconst SLine = styled.div`\n  position: absolute;\n  top: 0;\n  left: 1.5rem;\n  margin-top: 3rem;\n\n  &,\n  &::before,\n  &::after {\n    width: 2.2rem;\n    height: 2px;\n    background-color: var(--color-primary);\n    display: inline-block;\n    transition: all 0.2s;\n  }\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n  }\n\n  &::before {\n    top: -0.8rem;\n  }\n\n  &::after {\n    top: 0.8rem;\n  }\n`;\n\nconst Hamburger: React.FC<HamburgerProps> = ({ clicked }) => (\n  <SWrapper onClick={(e) => clicked(e)}>\n    <SLine />\n  </SWrapper>\n);\n\nexport default Hamburger;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { useContext, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Sidebar from '../template/Sidebar';\nimport Summary from '../template/Summary';\nimport Hamburger from '../../components/atoms/Hamburger/Hamburger';\nimport { AppContext, AppDispatchContext } from '../../contexts/AppContext';\n\nconst SWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 3fr 1fr;\n\n  width: 84%;\n  max-width: 1910px;\n  height: 65vw;\n\n  position: relative;\n  overflow: hidden;\n  border-radius: 2rem;\n  box-shadow: var(--shadow-dark);\n  margin: 6rem auto;\n\n  @media only screen and (max-width: 110em) {\n    width: 95%;\n    height: 75vw;\n  }\n\n  @media only screen and (max-width: 94em) {\n    width: 98%;\n    height: 85vw;\n  }\n\n  @media only screen and (max-width: 75em) {\n    width: 100vw;\n    height: 100vh;\n\n    margin: 0;\n    grid-template-columns: 1.3fr 3fr;\n  }\n\n  @media only screen and (max-width: 56.25em) {\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr;\n    position: relative;\n  }\n`;\n\nconst SMain = styled.main`\n  background-color: var(--color-white-dark);\n  border-radius: 2rem 0 0 2rem;\n  margin-left: -2rem;\n  overflow-y: hidden;\n  padding: 3.2rem 3.2rem 3.2rem 5.2rem;\n  position: relative;\n  height: 100%;\n\n  &:hover,\n  &:focus,\n  &:active {\n    overflow-y: scroll;\n  }\n\n  @media only screen and (max-width: 56.25em) {\n    border-radius: 0;\n    padding-top: 5.5rem;\n  }\n\n  @media only screen and (max-width: 22em) {\n    padding-left: 3.2rem;\n    padding-top: 5.5rem;\n  }\n`;\n\nconst Layout: React.FC = (props) => {\n  const [showSidebar, setShowSidebar] = useState(false);\n  const app = useContext(AppContext);\n  const setApp = useContext(AppDispatchContext);\n\n  const backdropClickHandler = () => {\n    setShowSidebar(false);\n  };\n\n  const hamburgerClickHandler = () => {\n    setShowSidebar(true);\n  };\n\n  useEffect(() => {\n    const newApp = { ...app };\n    if (showSidebar) {\n      newApp.showSidebar = true;\n      setApp(newApp);\n    } else {\n      newApp.showSidebar = false;\n      setApp(newApp);\n    }\n  }, [showSidebar]);\n\n  return (\n    <SWrapper>\n      <Sidebar closed={backdropClickHandler} />\n      <SMain>{props.children}</SMain>\n      <Summary />\n      <Hamburger clicked={hamburgerClickHandler} />\n    </SWrapper>\n  );\n};\n\nexport default Layout;\n","import axios from 'axios';\nimport * as urlDefs from '../constants/urls';\n\nconst createInstance = (url, queryParams) => {\n  const instance = axios.create({\n    baseURL: url,\n    params: {\n      ...queryParams,\n    },\n  });\n  return instance;\n};\n\nconst axiosCurrency = createInstance(urlDefs.CURR_URL, { base: 'USD' });\n\nexport default axiosCurrency;\n","export const CURR_URL = `https://api.exchangeratesapi.io/latest`;\n\nexport const TEST = '';\n","import React, { Suspense, useState, useContext, useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { UserDispatchContext } from '../../contexts/UserContext';\nimport { LoaderContext } from '../../contexts/LoaderContext';\nimport { DataDispatchContext } from '../../contexts/DataContext';\nimport { AppDispatchContext, AppContext } from '../../contexts/AppContext';\nimport { StatsDispatchContext, statsProps } from '../../contexts/StatsContext';\nimport usermock from '../../mock/user-mock.json';\nimport useData from '../../hooks/useData';\nimport Layout from '../layout/Layout';\nimport GeneralLoader from '../../components/organisms/GeneralLoader/GeneralLoader';\nimport useStats from '../../hooks/useStats';\nimport Loader from '../../components/atoms/Loader/Loader';\nimport axios from '../../services/axios';\n\nconst TransactionsList = React.lazy(() => import('./TransactionsList/TransactionsList'));\nconst Dashboard = React.lazy(() => import('./Dashboard/Dashboard'));\nconst SingleTransaction = React.lazy(() => import('./SingleTransaction/SingleTransaction'));\nconst CategoriesList = React.lazy(() => import('./CategoriesList/CategoriesList'));\nconst Charts = React.lazy(() => import('./Charts/Charts'));\nconst UserProfile = React.lazy(() => import('./UserProfile/UserProfile'));\n\nconst Homepage: React.FC = () => {\n  const [currRates, setCurrRates] = useState<{ [key: string]: number }>({});\n  const app = useContext(AppContext);\n  const setApp = useContext(AppDispatchContext);\n  const setUser = useContext(UserDispatchContext);\n  const setData = useContext(DataDispatchContext);\n  const setStats = useContext(StatsDispatchContext);\n  const isLoading = useContext(LoaderContext);\n  const dataList = useData();\n  const stats: statsProps = useStats();\n  const user = { ...usermock };\n\n  useEffect(() => {\n    (async () => {\n      const rates = await axios\n        .get('')\n        .then((res) => {\n          const data = { ...res.data };\n          const newRates = { ...data.rates };\n          return { ...newRates };\n        })\n        // eslint-disable-next-line no-console\n        .catch((err) => console.log(err));\n\n      setCurrRates(rates);\n    })();\n  }, []);\n\n  useEffect(() => {\n    const newApp = { ...app };\n    newApp.currencyRates = { ...currRates };\n    setApp(newApp);\n  }, [currRates]);\n\n  useEffect(() => {\n    if (user) {\n      setUser({\n        firstName: user.first_name,\n        lastName: user.last_name,\n        email: user.email,\n        avatar: user.avatar,\n        currentBalance: user.current_balance,\n        currentBalanceCurrency: user.current_balance_currency,\n        creditCard: {\n          expYear: user.credit_card.exp_year,\n          expMonth: user.credit_card.exp_month,\n          last4Digits: user.credit_card.last4Digits,\n        },\n      });\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (dataList) {\n      setData(dataList.slice());\n    }\n  }, [dataList]);\n\n  useEffect(() => {\n    if (stats) {\n      setStats(stats);\n    }\n  }, [stats]);\n\n  return (\n    <>\n      {isLoading ? <GeneralLoader /> : null}\n      <Layout>\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            <Route path=\"/transactions\" exact component={dataList.length ? TransactionsList : Loader} />\n            <Route path=\"/transactions/:transactionId\" component={SingleTransaction} />\n            <Route path=\"/user-profile\" component={UserProfile} />\n            <Route path=\"/charts\" component={Charts} />\n            <Route path=\"/categories\" component={CategoriesList} />\n            <Route path=\"/dashboard\" exact component={Dashboard} />\n            <Redirect to=\"/dashboard\" />\n          </Switch>\n        </Suspense>\n      </Layout>\n    </>\n  );\n};\nexport default Homepage;\n","export default __webpack_public_path__ + \"static/media/error.5be62c3d.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport img from '../../../assets/images/error.png';\n\nconst SImg = styled.img`\n  width: 5rem;\n  display: block;\n  margin: 0 auto;\n\n  z-index: 201;\n`;\n\nconst ErrorImg: React.FC = () => <SImg src={img} alt=\"Error\" />;\n\nexport default ErrorImg;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport Box, { BoxProps } from '@material-ui/core/Box';\n\nexport type ErrorInfoProps = BoxProps &\n  TypographyProps & {\n    errorMsg: string | null;\n  };\n\nconst useStyles = makeStyles((theme) => ({\n  errorMsgStyle: {\n    color: theme.palette.grey.A200,\n    marginTop: '0.6rem',\n  },\n  boxStyle: {\n    position: 'relative',\n    zIndex: 201,\n  },\n  titleStyle: {\n    '@media only screen and (max-width: 56.25em)': {\n      fontSize: '2rem',\n    },\n    '@media only screen and (max-width: 22em)': {\n      fontSize: '1.5rem',\n    },\n  },\n}));\n\nconst ErrorInfo: React.FC<ErrorInfoProps> = ({ errorMsg }) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.boxStyle} component=\"div\">\n      <Typography className={classes.titleStyle} variant=\"h4\" align=\"center\" color=\"textSecondary\">\n        Whoops!\n      </Typography>\n      <Typography className={classes.errorMsgStyle} variant=\"h6\" align=\"center\">\n        {errorMsg}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default ErrorInfo;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button, { ButtonProps } from '@material-ui/core/Button';\n\ntype ErrorBtnProps = ButtonProps & {\n  clicked: Function;\n};\n\nconst useStyle = makeStyles((theme) => ({\n  btnStyle: {\n    backgroundColor: theme.palette.secondary.main,\n    width: '50%',\n    margin: '0 auto',\n    height: '3rem',\n    color: theme.palette.common.white,\n    position: 'relative',\n    padding: '5px',\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.main,\n    },\n    '@media only screen and (max-width: 56.25em)': {\n      width: '70%',\n    },\n  },\n}));\n\nconst ErrorBtn: React.FC<ErrorBtnProps> = ({ clicked }) => {\n  const classes = useStyle();\n\n  return (\n    <Button className={classes.btnStyle} onClick={(e) => clicked(e)}>\n      Try Again\n    </Button>\n  );\n};\n\nexport default ErrorBtn;\n","import React from 'react';\nimport styled from 'styled-components';\nimport ErrorImg from '../../atoms/ErrorImg/ErrorImg';\nimport ErrorInfo from '../../atoms/ErrorInfo/ErrorInfo';\nimport ErrorBtn from '../../atoms/ErrorBtn/ErrorBtn';\n\ntype ErrorMessageProps = {\n  errorMsg: string;\n  onBtnClick: Function;\n};\n\nconst SWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  background-color: #fff;\n  border-radius: 0.8rem;\n  padding: 3rem 2rem;\n  height: 50%;\n  min-height: 25rem;\n  max-height: 30rem;\n  width: 40%;\n  max-width: 300px;\n  z-index: 201;\n\n  @media only screen and (max-width: 56.25em) {\n    width: 35%;\n    min-width: 200px;\n    min-height: 30%;\n  }\n\n  @media only screen and (max-width: 22em) {\n    width: 40%;\n    min-height: 30%;\n  }\n`;\n\nconst ErrorMessage: React.FC<ErrorMessageProps> = ({ errorMsg, onBtnClick }) => (\n  <SWrapper>\n    <ErrorImg />\n    <ErrorInfo errorMsg={errorMsg} />\n    <ErrorBtn clicked={onBtnClick} />\n  </SWrapper>\n);\n\nexport default ErrorMessage;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Backdrop from '../components/atoms/Backdrop/Backdrop';\nimport ErrorMessage from '../components/molecules/ErrorMessage/ErrorMessage';\n\nconst SWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 100vh;\n  width: 100vw;\n`;\n\ninterface Props extends RouteComponentProps {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: string;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      // eslint-disable-next-line react/no-unused-state\n      error: '',\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static getDerivedStateFromError(error: Error): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true, error: error.toString() };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    // eslint-disable-next-line no-console\n    console.log('Uncaught error:', error, errorInfo);\n  }\n\n  BtnClickHandler = () => {\n    // eslint-disable-next-line react/no-unused-state\n    this.setState({ hasError: false, error: '' });\n    this.props.history.replace('/');\n  };\n\n  public render() {\n    if (this.state.hasError) {\n      return (\n        <SWrapper>\n          <ErrorMessage onBtnClick={this.BtnClickHandler} errorMsg=\"Something went wrong.\" />\n          <Backdrop open clicked={() => {}} />\n        </SWrapper>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ErrorBoundary);\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport UserContextProvider from './contexts/UserContext';\nimport DataContextProvider from './contexts/DataContext';\nimport LoaderContextProvider from './contexts/LoaderContext';\nimport AppContextProvider from './contexts/AppContext';\nimport StatsContextProvider from './contexts/StatsContext';\nimport Homepage from './views/pages/Homepage';\nimport ErrorBoundary from './hoc/ErrorBoundary';\n\nconst App: React.FC = () => (\n  <BrowserRouter>\n    <ErrorBoundary>\n      <UserContextProvider>\n        <DataContextProvider>\n          <StatsContextProvider>\n            <LoaderContextProvider>\n              <AppContextProvider>\n                <Homepage />\n              </AppContextProvider>\n            </LoaderContextProvider>\n          </StatsContextProvider>\n        </DataContextProvider>\n      </UserContextProvider>\n    </ErrorBoundary>\n  </BrowserRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport './index.css';\nimport theme from './style/theme/theme';\nimport GlobalStyle from './style/global/global';\nimport App from './App';\n\nconst app = <App />;\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <ThemeProvider theme={theme}>{app}</ThemeProvider>\n  </>,\n  document.getElementById('root')\n);\n","import React, { useState } from 'react';\n\nexport type UserProps = {\n  firstName: string;\n  lastName: string;\n  email: string;\n  avatar: string;\n  currentBalance: string;\n  currentBalanceCurrency: string;\n  creditCard: {\n    expYear: number;\n    expMonth: number;\n    last4Digits: number;\n  };\n};\n\nexport const initialUserContext = {\n  firstName: 'ian',\n  lastName: 'kelley',\n  email: 'ian_kelley@gmail.com',\n  avatar:\n    'https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1600&q=80',\n  currentBalance: '25650',\n  currentBalanceCurrency: 'USD',\n  creditCard: {\n    expYear: 21,\n    expMonth: 4,\n    last4Digits: 1111,\n  },\n};\n\nexport const UserContext = React.createContext<UserProps>(initialUserContext);\nexport const UserDispatchContext = React.createContext<Function>(() => {});\n\nconst UserContextProvider: React.FC = ({ children }) => {\n  const [user, setUser] = useState<UserProps>(initialUserContext);\n\n  return (\n    <UserContext.Provider value={{ ...user }}>\n      <UserDispatchContext.Provider value={setUser}>{children}</UserDispatchContext.Provider>\n    </UserContext.Provider>\n  );\n};\n\nexport default UserContextProvider;\n","const convertCurrency = (\n  amount: number,\n  fromCurr: string,\n  toCurr: string,\n  rates: { [key: string]: number }\n): number => {\n  const ratio1: number = rates[fromCurr];\n  const ratio2: number = rates[toCurr];\n  const total: number = (amount / ratio1) * ratio2;\n  if (Number.isNaN(total)) {\n    return 0;\n  }\n  return total;\n};\n\nexport default convertCurrency;\n","import React, { useState } from 'react';\n\nexport const LoaderContext = React.createContext<boolean>(false);\nexport const LoaderDispatchContext = React.createContext<Function>(() => {});\n\nconst LoaderContextProvider: React.FC = ({ children }) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  return (\n    <LoaderContext.Provider value={isLoading}>\n      <LoaderDispatchContext.Provider value={setIsLoading}>{children}</LoaderDispatchContext.Provider>\n    </LoaderContext.Provider>\n  );\n};\n\nexport default LoaderContextProvider;\n","import React, { useState } from 'react';\n\nexport type DataItemProps = {\n  id: string;\n  transactionType: string;\n  paypal: boolean;\n  time: string;\n  date: string;\n  currency: string;\n  category: string;\n  amount: string;\n  location: {\n    country: string;\n    city: string;\n    street: string;\n    lat: number;\n    lng: number;\n  };\n  company: string;\n};\n\nexport type DataListProps = DataItemProps[];\n\nexport const DataContext = React.createContext<DataListProps>([]);\nexport const DataDispatchContext = React.createContext<Function>(() => {});\n\nconst DataContextProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<DataListProps>([]);\n\n  return (\n    <DataContext.Provider value={data.slice()}>\n      <DataDispatchContext.Provider value={setData}>{children}</DataDispatchContext.Provider>\n    </DataContext.Provider>\n  );\n};\n\nexport default DataContextProvider;\n","import React from 'react';\nimport BD, { BackdropProps as BDProps } from '@material-ui/core/Backdrop';\nimport { makeStyles } from '@material-ui/core';\n\ntype BackdropProps = BDProps & {\n  clicked: Function;\n};\n\nconst useStyle = makeStyles({\n  backdropStyle: {\n    zIndex: 200,\n  },\n});\n\nconst Backdrop: React.FC<BackdropProps> = ({ open, clicked }) => {\n  const classes = useStyle();\n\n  return <BD className={classes.backdropStyle} open={open} onClick={(e) => clicked(e)} />;\n};\nexport default Backdrop;\n","export default __webpack_public_path__ + \"static/media/loader.b99ed176.gif\";","import React from 'react';\nimport styled from 'styled-components';\nimport img from '../../../assets/images/loader.gif';\n\nconst SImg = styled.img`\n  width: 5rem;\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, 50%);\n  z-index: 201;\n`;\n\nconst Loader: React.FC = () => <SImg src={img} alt=\"Loading\" />;\n\nexport default Loader;\n","const formatNumber = (number: number) =>\n  number\n    .toFixed(2)\n    .toString()\n    .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ',')\n    .replace(/\\.00/, '');\nexport default formatNumber;\n","const capitalize = (str: string) => {\n  const splitStr = str.split(' ');\n  for (let i = 0; i < splitStr.length; i += 1) {\n    splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n  }\n  return splitStr.join(' ');\n};\n\nexport default capitalize;\n","import React, { useState } from 'react';\n\nexport type statsProps = Map<string, { expenses: number; incomes: number; cancelled: number }>;\n\nexport const initialStatsContext: statsProps = new Map([['2020_Jan', { expenses: 0, incomes: 0, cancelled: 0 }]]);\n\nexport const StatsContext = React.createContext<statsProps>(initialStatsContext);\nexport const StatsDispatchContext = React.createContext<Function>(() => {});\n\nconst StatsContextProvider: React.FC = ({ children }) => {\n  const [stats, setStats] = useState<statsProps>(initialStatsContext);\n\n  return (\n    <StatsContext.Provider value={new Map(stats)}>\n      <StatsDispatchContext.Provider value={setStats}>{children}</StatsDispatchContext.Provider>\n    </StatsContext.Provider>\n  );\n};\n\nexport default StatsContextProvider;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport OutlinedFlagIcon from '@material-ui/icons/OutlinedFlag';\nimport { IconProps } from '@material-ui/core/Icon';\n\ntype FallbackIconProps = IconProps & {\n  location: 'sidebar' | 'summary' | 'dashboard';\n};\n\nconst useStyles = makeStyles((theme) => ({\n  summaryStyle: {\n    borderRadius: '50%',\n    padding: '0.3rem',\n    backgroundColor: theme.palette.grey.A100,\n    fill: theme.palette.common.white,\n  },\n  sidebarStyle: {\n    fill: theme.palette.common.white,\n    marginRight: '1rem',\n  },\n  dashboardStyle: {\n    borderRadius: '50%',\n    padding: '0.3rem',\n    backgroundColor: theme.palette.grey.A100,\n    fill: theme.palette.common.white,\n  },\n}));\n\nconst FallbackIcon: React.FC<FallbackIconProps> = ({ location }: FallbackIconProps) => {\n  const classes = useStyles();\n\n  switch (location) {\n    case 'summary':\n      return <OutlinedFlagIcon className={classes.summaryStyle} fontSize=\"large\" />;\n    case 'dashboard':\n      return <OutlinedFlagIcon className={classes.dashboardStyle} fontSize=\"large\" />;\n    default:\n      // 'sidebar'\n      return <OutlinedFlagIcon className={classes.sidebarStyle} fontSize=\"large\" />;\n  }\n};\n\nexport default FallbackIcon;\n","enum Symbol {\n  AED = 'د.إ',\n  AFN = '؋',\n  ALL = 'L',\n  AMD = '֏',\n  ANG = 'ƒ',\n  AOA = 'Kz',\n  ARS = '$',\n  AUD = '$',\n  AWG = 'ƒ',\n  AZN = '₼',\n  BAM = 'KM',\n  BBD = '$',\n  BDT = '৳',\n  BGN = 'лв',\n  BHD = '.د.ب',\n  BIF = 'FBu',\n  BMD = '$',\n  BND = '$',\n  BOB = '$b',\n  BRL = 'R$',\n  BSD = '$',\n  BTC = '฿',\n  BTN = 'Nu.',\n  BWP = 'P',\n  BYR = 'Br',\n  BYN = 'Br',\n  BZD = 'BZ$',\n  CAD = '$',\n  CDF = 'FC',\n  CHF = 'CHF',\n  CLP = '$',\n  CNY = '¥',\n  COP = '$',\n  CRC = '₡',\n  CUC = '$',\n  CUP = '₱',\n  CVE = '$',\n  CZK = 'Kč',\n  DJF = 'Fdj',\n  DKK = 'kr',\n  DOP = 'RD$',\n  DZD = 'دج',\n  EEK = 'kr',\n  EGP = '£',\n  ERN = 'Nfk',\n  ETB = 'Br',\n  ETH = 'Ξ',\n  EUR = '€',\n  FJD = '$',\n  FKP = '£',\n  GBP = '£',\n  GEL = '₾',\n  GGP = '£',\n  GHC = '₵',\n  GHS = 'GH₵',\n  GIP = '£',\n  GMD = 'D',\n  GNF = 'FG',\n  GTQ = 'Q',\n  GYD = '$',\n  HKD = '$',\n  HNL = 'L',\n  HRK = 'kn',\n  HTG = 'G',\n  HUF = 'Ft',\n  IDR = 'Rp',\n  ILS = '₪',\n  IMP = '£',\n  INR = '₹',\n  IQD = 'ع.د',\n  IRR = '﷼',\n  ISK = 'kr',\n  JEP = '£',\n  JMD = 'J$',\n  JOD = 'JD',\n  JPY = '¥',\n  KES = 'KSh',\n  KGS = 'лв',\n  KHR = '៛',\n  KMF = 'CF',\n  KPW = '₩',\n  KRW = '₩',\n  KWD = 'KD',\n  KYD = '$',\n  KZT = 'лв',\n  LAK = '₭',\n  LBP = '£',\n  LKR = '₨',\n  LRD = '$',\n  LSL = 'M',\n  LTC = 'Ł',\n  LTL = 'Lt',\n  LVL = 'Ls',\n  LYD = 'LD',\n  MAD = 'MAD',\n  MDL = 'lei',\n  MGA = 'Ar',\n  MKD = 'ден',\n  MMK = 'K',\n  MNT = '₮',\n  MOP = 'MOP$',\n  MRO = 'UM',\n  MRU = 'UM',\n  MUR = '₨',\n  MVR = 'Rf',\n  MWK = 'MK',\n  MXN = '$',\n  MYR = 'RM',\n  MZN = 'MT',\n  NAD = '$',\n  NGN = '₦',\n  NIO = 'C$',\n  NOK = 'kr',\n  NPR = '₨',\n  NZD = '$',\n  OMR = '﷼',\n  PAB = 'B/.',\n  PEN = 'S/.',\n  PGK = 'K',\n  PHP = '₱',\n  PKR = '₨',\n  PLN = 'zł',\n  PYG = 'Gs',\n  QAR = '﷼',\n  RMB = '￥',\n  RON = 'lei',\n  RSD = 'Дин.',\n  RUB = '₽',\n  RWF = 'R₣',\n  SAR = '﷼',\n  SBD = '$',\n  SCR = '₨',\n  SDG = 'ج.س.',\n  SEK = 'kr',\n  SGD = '$',\n  SHP = '£',\n  SLL = 'Le',\n  SOS = 'S',\n  SRD = '$',\n  SSP = '£',\n  STD = 'Db',\n  STN = 'Db',\n  SVC = '$',\n  SYP = '£',\n  SZL = 'E',\n  THB = '฿',\n  TJS = 'SM',\n  TMT = 'T',\n  TND = 'د.ت',\n  TOP = 'T$',\n  TRL = '₤',\n  TRY = '₺',\n  TTD = 'TT$',\n  TVD = '$',\n  TWD = 'NT$',\n  TZS = 'TSh',\n  UAH = '₴',\n  UGX = 'USh',\n  USD = '$',\n  UYU = '$U',\n  UZS = 'лв',\n  VEF = 'Bs',\n  VND = '₫',\n  VUV = 'VT',\n  WST = 'WS$',\n  XAF = 'FCFA',\n  XBT = 'Ƀ',\n  XCD = '$',\n  XOF = 'CFA',\n  XPF = '₣',\n  YER = '﷼',\n  ZAR = 'R',\n  ZWD = 'Z$',\n}\nexport default Symbol;\n","import Symbol from '../containers/enums/CurrenciesSymbol';\n\nconst getCurrencySymbol = (currency: string) => (<any>Symbol)[currency];\n\nexport default getCurrencySymbol;\n","import { useState, useCallback, useEffect, useContext } from 'react';\nimport moment from 'moment';\nimport { statsProps } from '../contexts/StatsContext';\nimport { AppContext } from '../contexts/AppContext';\nimport { LoaderDispatchContext } from '../contexts/LoaderContext';\nimport { MONTHS } from '../constants/globalConst';\nimport convertCurrency from '../utils/convertCurrency';\n\nconst data = require('../mock/data-mock.json');\n\nexport const firstDate = moment(data[0].date, 'MM/DD/YYYY');\n\nconst useStats = () => {\n  const lastDate = moment(firstDate.toDate(), 'MM/DD/YYYY').subtract(MONTHS, 'months');\n  const setIsLoading = useContext(LoaderDispatchContext);\n  const app = useContext(AppContext);\n  const [currData, setCurrData] = useState<statsProps>(new Map());\n\n  const getState = useCallback(\n    (isActive: boolean) => {\n      const newCurrData: statsProps = new Map();\n\n      if (data instanceof Array) {\n        let i: number = 0;\n\n        for (i; i < data.length; i += 1) {\n          const currDate = moment(data[i].date, 'MM/DD/YYYY');\n          if (currDate.isAfter(lastDate) && currDate.isBefore(firstDate)) {\n            const currMonth = currDate.format('MMM');\n            const currYear = currDate.format('YYYY');\n            const dateStr: string = `${currYear}_${currMonth}`;\n\n            switch (data[i].transactionType) {\n              case 'expense':\n                if (newCurrData.get(dateStr) === undefined) {\n                  newCurrData.set(dateStr, {\n                    expenses: convertCurrency(\n                      parseFloat(data[i].amount),\n                      data[i].currency,\n                      app.currency,\n                      app.currencyRates\n                    ),\n                    incomes: 0,\n                    cancelled: 0,\n                  });\n                } else {\n                  newCurrData.set(dateStr, {\n                    expenses:\n                      newCurrData.get(dateStr)!.expenses +\n                      convertCurrency(parseFloat(data[i].amount), data[i].currency, app.currency, app.currencyRates),\n                    incomes: newCurrData.get(dateStr)!.incomes,\n                    cancelled: newCurrData.get(dateStr)!.cancelled,\n                  });\n                }\n                break;\n              case 'Income':\n                if (newCurrData.get(dateStr) === undefined) {\n                  newCurrData.set(dateStr, {\n                    incomes: convertCurrency(\n                      parseFloat(data[i].amount),\n                      data[i].currency,\n                      app.currency,\n                      app.currencyRates\n                    ),\n                    expenses: 0,\n                    cancelled: 0,\n                  });\n                } else {\n                  newCurrData.set(dateStr, {\n                    incomes:\n                      newCurrData.get(dateStr)!.incomes +\n                      convertCurrency(parseFloat(data[i].amount), data[i].currency, app.currency, app.currencyRates),\n                    expenses: newCurrData.get(dateStr)!.expenses,\n                    cancelled: newCurrData.get(dateStr)!.cancelled,\n                  });\n                }\n                break;\n              default:\n                if (newCurrData.get(dateStr) === undefined) {\n                  newCurrData.set(dateStr, {\n                    cancelled: convertCurrency(\n                      parseFloat(data[i].amount),\n                      data[i].currency,\n                      app.currency,\n                      app.currencyRates\n                    ),\n                    incomes: 0,\n                    expenses: 0,\n                  });\n                } else {\n                  newCurrData.set(dateStr, {\n                    cancelled:\n                      newCurrData.get(dateStr)!.cancelled +\n                      convertCurrency(parseFloat(data[i].amount), data[i].currency, app.currency, app.currencyRates),\n                    incomes: newCurrData.get(dateStr)!.incomes,\n                    expenses: newCurrData.get(dateStr)!.expenses,\n                  });\n                }\n            }\n          }\n        }\n        if (isActive) {\n          setIsLoading(false);\n          setCurrData(newCurrData);\n        }\n      }\n    },\n    [app.currencyRates]\n  );\n\n  useEffect(() => {\n    let isActive = true;\n    setIsLoading(true);\n\n    if (app.currencyRates) {\n      getState(isActive);\n    }\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isActive = false;\n    };\n  }, [getState, app.currencyRates]);\n\n  return currData;\n};\n\nexport default useStats;\n","export const MONTHS = 6;\n\nexport const TEST = '';\n","const slugify = (str: string) => str.replace(/\\s+/g, '-');\n\nexport default slugify;\n","const narrowTransactionType = (someType: string): 'Income' | 'expense' | 'cancelled' => {\n  switch (someType) {\n    case 'Income':\n      return 'Income';\n    case 'expense':\n      return 'expense';\n    default:\n      return 'cancelled';\n  }\n};\n\nexport default narrowTransactionType;\n","import React from 'react';\nimport Loader from '../../atoms/Loader/Loader';\nimport Backdrop from '../../atoms/Backdrop/Backdrop';\n\nconst GeneralLoader: React.FC = () => (\n  <>\n    <Loader />\n    <Backdrop open clicked={() => {}} />\n  </>\n);\n\nexport default GeneralLoader;\n"],"sourceRoot":""}