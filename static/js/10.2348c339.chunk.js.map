{"version":3,"sources":["components/atoms/TransactionAmount/TransactionsAmount.tsx","components/molecules/TransactionsInfo/TransactionsInfo.tsx","components/atoms/StarredIcon/StarredIcon.tsx","components/atoms/ClockIcon/ClockIcon.tsx","components/atoms/CalenderIcon/CalendarIcon.tsx","components/molecules/Timestamp/Timestamp.tsx","components/molecules/TransactionsCard/TransactionsCard.tsx","hooks/useLocalStorage.tsx","hooks/useFavs.tsx","components/organisms/FavoritesList/FavoritesList.tsx","components/organisms/UserPrefs/UserPrefs.tsx","views/pages/UserProfile/UserProfile.tsx"],"names":["useStyles","makeStyles","refundStyle","color","contentStyle","fontSize","TransactionsAmount","amount","currency","isRefund","classes","deposit","formatNumber","getCurrencySymbol","content","Typography","variant","Box","className","component","SWrapper","styled","div","SInfoWrapper","theme","titleStyle","marginBottom","palette","grey","A100","TransactionsInfo","type","toUpperCase","iconStyle","fill","A200","cursor","StarredIcon","isStarred","clicked","onClick","e","marginRight","ClockIcon","CalendarIcon","labelStyle","STimeWrapper","SDateWrapper","Timestamp","time","date","SLine","SHeaderWrapper","TransactionsCard","company","id","isFaved","onClickFavorite","app","useContext","AppContext","capitalize","convertCurrency","currencyRates","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","err","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","Error","useFavs","storedFavs","setStoredFavs","newFav","newFavs","slice","filteredData","filter","cur","push","SBottomWrapper","FavoritesList","favs","updateFavs","map","el","curr","findIndex","renderFavItem","formControl","width","menuStyle","UserPrefs","setApp","AppDispatchContext","FormControl","InputLabel","Select","native","onChange","event","newApp","target","label","Object","keys","UserProfile"],"mappings":"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","file":"static/js/10.2348c339.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport getCurrencySymbol from '../../../utils/getCurrencySymbol';\nimport formatNumber from '../../../utils/formatNumber';\n\nexport type TransactionsAmountProps = TypographyProps &\n  BoxProps & {\n    amount: number;\n    currency: string;\n    isRefund: boolean;\n  };\n\nconst useStyles = makeStyles({\n  refundStyle: {\n    color: 'var(--color-secondary)',\n  },\n  contentStyle: {\n    '@media only screen and (max-width: 94em)': {\n      fontSize: '0.9rem',\n    },\n  },\n});\n\nconst TransactionsAmount: React.FC<TransactionsAmountProps> = ({ amount, currency, isRefund }) => {\n  const classes = useStyles();\n\n  const deposit = `${formatNumber(amount)} ${getCurrencySymbol(currency)}`;\n  let content = (\n    <Typography color=\"textSecondary\" variant=\"h6\">\n      {deposit}\n    </Typography>\n  );\n  if (isRefund) {\n    content = (\n      <Box className={classes.refundStyle} component=\"div\">\n        <Typography className={classes.contentStyle} variant=\"h6\">\n          {deposit}\n        </Typography>\n        <Typography variant=\"body1\">Refunded</Typography>\n      </Box>\n    );\n  }\n\n  return content;\n};\n\nexport default TransactionsAmount;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport TransactionsAmount, { TransactionsAmountProps } from '../../atoms/TransactionAmount/TransactionsAmount';\n\nexport type TransactionsInfoProps = TypographyProps &\n  TransactionsAmountProps & {\n    type: 'Income' | 'expense' | 'cancelled';\n  };\n\nconst SWrapper = styled.div`\n  display: flex;\n\n  width: 100%;\n`;\n\nconst SInfoWrapper = styled.div`\n  width: 13rem;\n  height: 8rem;\n\n  display: flex;\n  flex-direction: column;\n\n  background-color: var(--color-white);\n  padding: 0.8rem;\n  margin: 0.8rem;\n  border-radius: 0.4rem;\n  box-shadow: var(--shadow-light);\n\n  @media only screen and (max-width: 37.5em) {\n    height: 7rem;\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  titleStyle: {\n    marginBottom: '0.5rem',\n    color: theme.palette.grey.A100,\n  },\n}));\n\nconst TransactionsInfo: React.FC<TransactionsInfoProps> = ({ amount, currency, isRefund, type }) => {\n  const classes = useStyles();\n\n  return (\n    <SWrapper>\n      <SInfoWrapper>\n        <Typography className={classes.titleStyle} variant=\"subtitle2\">\n          Amount\n        </Typography>\n        <TransactionsAmount amount={amount} currency={currency} isRefund={isRefund} />\n      </SInfoWrapper>\n      <SInfoWrapper>\n        <Typography className={classes.titleStyle} variant=\"subtitle2\">\n          Transaction\n        </Typography>\n        <Typography variant=\"h6\">{type.toUpperCase()}</Typography>\n      </SInfoWrapper>\n    </SWrapper>\n  );\n};\n\nexport default TransactionsInfo;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport StarOutlineIcon from '@material-ui/icons/StarOutline';\nimport StarIcon from '@material-ui/icons/Star';\nimport { IconProps } from '@material-ui/core/Icon';\n\ntype StarProps = IconProps & {\n  isStarred: boolean;\n  clicked: Function;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  iconStyle: {\n    fill: theme.palette.grey.A200,\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n}));\n\nconst StarredIcon: React.FC<StarProps> = ({ isStarred, clicked }) => {\n  const classes = useStyles();\n\n  return isStarred ? (\n    <StarIcon className={classes.iconStyle} fontSize=\"large\" onClick={(e) => clicked(e)} />\n  ) : (\n    <StarOutlineIcon className={classes.iconStyle} fontSize=\"large\" onClick={(e) => clicked(e)} />\n  );\n};\nexport default StarredIcon;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { IconProps } from '@material-ui/core/Icon';\n\nconst useStyles = makeStyles((theme) => ({\n  iconStyle: {\n    fill: theme.palette.grey.A200,\n    marginRight: '0.5rem',\n  },\n}));\n\nconst ClockIcon: React.FC<IconProps> = () => {\n  const classes = useStyles();\n\n  return <AccessTimeIcon className={classes.iconStyle} />;\n};\n\nexport default ClockIcon;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DateRangeOutlinedIcon from '@material-ui/icons/DateRangeOutlined';\nimport { IconProps } from '@material-ui/core/Icon';\n\nconst useStyles = makeStyles((theme) => ({\n  iconStyle: {\n    fill: theme.palette.grey.A200,\n    marginRight: '0.5rem',\n  },\n}));\n\nconst CalendarIcon: React.FC<IconProps> = () => {\n  const classes = useStyles();\n\n  return <DateRangeOutlinedIcon className={classes.iconStyle} />;\n};\n\nexport default CalendarIcon;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport ClockIcon from '../../atoms/ClockIcon/ClockIcon';\nimport CalenderIcon from '../../atoms/CalenderIcon/CalendarIcon';\n\nexport type TimestampProps = TypographyProps & {\n  time: string;\n  date: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  labelStyle: {\n    color: theme.palette.grey.A100,\n  },\n}));\n\nconst SWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n\n  align-self: flex-start;\n\n  margin-top: 0.5rem;\n  width: 90%;\n`;\n\nconst STimeWrapper = styled.div`\n  display: flex;\n  width: 45%;\n`;\n\nconst SDateWrapper = styled.div`\n  display: flex;\n  width: 45%;\n`;\n\nconst Timestamp: React.FC<TimestampProps> = ({ time, date }) => {\n  const classes = useStyles();\n\n  return (\n    <SWrapper>\n      <STimeWrapper>\n        <ClockIcon />\n        <Typography className={classes.labelStyle} variant=\"subtitle1\">\n          {time}\n        </Typography>\n      </STimeWrapper>\n      <SDateWrapper>\n        <CalenderIcon />\n        <Typography className={classes.labelStyle} variant=\"subtitle1\">\n          {date}\n        </Typography>\n      </SDateWrapper>\n    </SWrapper>\n  );\n};\n\nexport default Timestamp;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport TransactionsInfo, { TransactionsInfoProps } from '../TransactionsInfo/TransactionsInfo';\nimport StarredIcon from '../../atoms/StarredIcon/StarredIcon';\nimport Timestamp, { TimestampProps } from '../Timestamp/Timestamp';\nimport capitalize from '../../../utils/capitalize';\nimport { AppContext } from '../../../contexts/AppContext';\nimport convertCurrency from '../../../utils/convertCurrency';\n\nexport type TransactionsCardProps = TypographyProps &\n  TransactionsInfoProps &\n  TimestampProps & {\n    company: string;\n    id: string;\n    isFaved: boolean;\n    onClickFavorite: (isFaved: boolean, newFav: TransactionsCardProps) => void;\n  };\n\nconst SWrapper = styled.div`\n  width: 100%;\n  max-width: 25rem;\n  min-width: 22rem;\n  max-height: 16rem;\n  min-height: 15rem;\n\n  box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\n  padding: 1.5rem 2rem;\n  background-color: var(--color-white);\n  border-radius: 1rem;\n  position: relative;\n  overflow: hidden;\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst SLine = styled.div`\n  height: 0.4rem;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: var(--color-secondary);\n`;\n\nconst SHeaderWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst TransactionsCard: React.FC<TransactionsCardProps> = ({\n  type,\n  amount,\n  currency,\n  isRefund,\n  company,\n  time,\n  date,\n  id,\n  isFaved,\n  onClickFavorite,\n}) => {\n  const app = useContext(AppContext);\n\n  const favClickHandler = () => {\n    const newFav = { type, amount, currency, isRefund, company, time, date, id, isFaved, onClickFavorite };\n\n    onClickFavorite(isFaved, newFav);\n  };\n\n  const content = <SLine>&nbsp;</SLine>;\n\n  return (\n    <SWrapper>\n      {isRefund && content}\n      <SHeaderWrapper>\n        <Typography variant=\"h5\">{capitalize(company)}</Typography>\n        <StarredIcon clicked={favClickHandler} isStarred={isFaved} />\n      </SHeaderWrapper>\n      <Timestamp time={time} date={date} />\n      <TransactionsInfo\n        amount={convertCurrency(amount, currency, app.currency, app.currencyRates)}\n        currency={app.currency}\n        isRefund={isRefund}\n        type={type}\n      />\n    </SWrapper>\n  );\n};\n\nexport default TransactionsCard;\n","import { useState } from 'react';\n\nconst useLocalStorage = (key: string, initialValue: any) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (err) {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: any) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (err) {\n      throw new Error('error');\n    }\n  };\n\n  return [storedValue, setValue];\n};\n\nexport default useLocalStorage;\n","import useLocalStorage from './useLocalStorage';\nimport { TransactionsCardProps } from '../components/molecules/TransactionsCard/TransactionsCard';\n\nconst useFavs = () => {\n  const [storedFavs, setStoredFavs] = useLocalStorage('favorits', [{}]);\n\n  const updateLocalStorage = (isFaved: boolean, newFav: TransactionsCardProps) => {\n    const newFavs = storedFavs.slice();\n\n    if (!isFaved) {\n      newFavs.push(newFav);\n      setStoredFavs(newFavs);\n    } else {\n      const filteredData = newFavs.filter((cur: any) => cur.id !== newFav.id);\n      setStoredFavs(filteredData);\n    }\n  };\n\n  return [storedFavs, updateLocalStorage];\n};\n\nexport default useFavs;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport TransactionsCard, { TransactionsCardProps } from '../../molecules/TransactionsCard/TransactionsCard';\nimport useFavs from '../../../hooks/useFavs';\n\nexport type FavoritesListProps = TypographyProps;\n\nconst SWrapper = styled.div`\n  margin-bottom: 2.5rem;\n`;\n\nconst SBottomWrapper = styled.div`\n  display: flex;\n\n  margin-top: 1rem;\n  overflow-x: hidden;\n  padding: 1rem 0;\n\n  &:hover,\n  &:active,\n  &:focus {\n    overflow-x: scroll;\n  }\n\n  > * {\n    margin-right: 2rem;\n  }\n`;\n\nconst FavoritesList: React.FC = () => {\n  const [favs, updateFavs] = useFavs();\n\n  const itemInFavs = (id: string): number => favs.findIndex((item: TransactionsCardProps) => item.id === id);\n\n  const renderFavItem = (curr: TransactionsCardProps) => (\n    <TransactionsCard\n      key={curr.id}\n      id={curr.id}\n      company={curr.company}\n      amount={curr.amount}\n      currency={curr.currency}\n      isRefund={curr.isRefund}\n      type={curr.type}\n      time={curr.time}\n      date={curr.date}\n      isFaved={itemInFavs(curr.id) > 0}\n      onClickFavorite={updateFavs}\n    />\n  );\n\n  return (\n    <SWrapper>\n      <Typography variant=\"h4\" color=\"textSecondary\">\n        Favorites\n      </Typography>\n      <SBottomWrapper>{favs.slice(1).map((el: TransactionsCardProps) => renderFavItem(el))}</SBottomWrapper>\n    </SWrapper>\n  );\n};\n\nexport default FavoritesList;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel, { InputLabelProps } from '@material-ui/core/InputLabel';\nimport FormControl, { FormControlProps } from '@material-ui/core/FormControl';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport Select, { SelectProps } from '@material-ui/core/Select';\nimport { AppContext, AppDispatchContext } from '../../../contexts/AppContext';\n\ntype UserPrefsProps = InputLabelProps & SelectProps & FormControlProps & TypographyProps;\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    width: '10rem',\n    color: 'red',\n    fill: 'black',\n  },\n  menuStyle: {\n    color: theme.palette.grey.A200,\n  },\n  titleStyle: {\n    marginBottom: '1rem',\n  },\n}));\n\nconst SWrapper = styled.div`\n  height: 15%;\n`;\n\nconst UserPrefs: React.FC<UserPrefsProps> = () => {\n  const classes = useStyles();\n  const app = useContext(AppContext);\n  const setApp = useContext(AppDispatchContext);\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newApp = { ...app };\n    setApp({ ...newApp, currency: event.target.value as typeof app.currency });\n  };\n\n  const renderOption = (curr: string) => (\n    <option key={curr} className={classes.menuStyle} value={curr}>\n      {curr}\n    </option>\n  );\n\n  return (\n    <SWrapper>\n      <Typography className={classes.titleStyle} variant=\"h4\" color=\"textSecondary\">\n        Preferences\n      </Typography>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Currency</InputLabel>\n        <Select native value={app.currency} onChange={handleChange} label=\"Currency\">\n          {Object.keys(app.currencyRates).map((el) => renderOption(el))}\n        </Select>\n      </FormControl>\n    </SWrapper>\n  );\n};\n\nexport default UserPrefs;\n","import React from 'react';\nimport styled from 'styled-components';\nimport FavoritesList from '../../../components/organisms/FavoritesList/FavoritesList';\nimport UserPrefs from '../../../components/organisms/UserPrefs/UserPrefs';\n\nconst SWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  padding: 3.2rem 3.2rem 3.2rem 5.2rem;\n\n  @media only screen and (max-width: 22em) {\n    padding: 3.2rem;\n  }\n`;\n\nconst UserProfile: React.FC = () => (\n  <SWrapper>\n    <FavoritesList />\n    <UserPrefs />\n  </SWrapper>\n);\n\nexport default UserProfile;\n"],"sourceRoot":""}